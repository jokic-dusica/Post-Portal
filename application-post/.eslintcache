[{"C:\\Users\\Dusica\\application-post\\src\\index.js":"1","C:\\Users\\Dusica\\application-post\\src\\App.js":"2","C:\\Users\\Dusica\\application-post\\src\\reportWebVitals.js":"3","C:\\Users\\Dusica\\application-post\\src\\components\\index.js":"4","C:\\Users\\Dusica\\application-post\\src\\data\\data.js":"5","C:\\Users\\Dusica\\application-post\\src\\pages\\NavBar.js":"6","C:\\Users\\Dusica\\application-post\\src\\pages\\blogPostDetails.js":"7","C:\\Users\\Dusica\\application-post\\src\\components\\commentPost.js":"8","C:\\Users\\Dusica\\application-post\\src\\pages\\myProfil.js":"9","C:\\Users\\Dusica\\application-post\\src\\data\\user.js":"10","C:\\Users\\Dusica\\application-post\\src\\hooks\\postHook.js":"11","C:\\Users\\Dusica\\application-post\\src\\hooks\\commentHook.js":"12","C:\\Users\\Dusica\\application-post\\src\\pages\\login.js":"13","C:\\Users\\Dusica\\application-post\\src\\hooks\\userHook.js":"14","C:\\Users\\Dusica\\application-post\\src\\pages\\register.js":"15","C:\\Users\\Dusica\\application-post\\src\\components\\updateComment.js":"16","C:\\Users\\Dusica\\application-post\\src\\components\\singlePost\\singleBlogPost.js":"17","C:\\Users\\Dusica\\application-post\\src\\components\\blogPost\\blogPost.js":"18","C:\\Users\\Dusica\\application-post\\src\\components\\updatePost\\updatePost.js":"19","C:\\Users\\Dusica\\application-post\\src\\components\\commentForm\\commentForm.js":"20","C:\\Users\\Dusica\\application-post\\src\\components\\userProfil\\userProfil.js":"21","C:\\Users\\Dusica\\application-post\\src\\components\\userModal\\userModal.js":"22","C:\\Users\\Dusica\\application-post\\src\\pages\\newBlog.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":1819,"mtime":1613925483048,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":358,"mtime":1613844604600,"results":"28","hashOfConfig":"25"},{"size":8883,"mtime":1612720103360,"results":"29","hashOfConfig":"25"},{"size":1507,"mtime":1613642639892,"results":"30","hashOfConfig":"25"},{"size":1667,"mtime":1613846403659,"results":"31","hashOfConfig":"25"},{"size":1575,"mtime":1613025790013,"results":"32","hashOfConfig":"25"},{"size":557,"mtime":1613846910673,"results":"33","hashOfConfig":"25"},{"size":228,"mtime":1612716400105,"results":"34","hashOfConfig":"25"},{"size":1456,"mtime":1613714667071,"results":"35","hashOfConfig":"25"},{"size":750,"mtime":1613110819416,"results":"36","hashOfConfig":"25"},{"size":1283,"mtime":1613925721475,"results":"37","hashOfConfig":"25"},{"size":1262,"mtime":1613110825602,"results":"38","hashOfConfig":"25"},{"size":1476,"mtime":1613925515371,"results":"39","hashOfConfig":"25"},{"size":1034,"mtime":1613025422975,"results":"40","hashOfConfig":"25"},{"size":1420,"mtime":1613844229039,"results":"41","hashOfConfig":"25"},{"size":1363,"mtime":1613845091168,"results":"42","hashOfConfig":"25"},{"size":1567,"mtime":1613845948996,"results":"43","hashOfConfig":"25"},{"size":2438,"mtime":1613846697830,"results":"44","hashOfConfig":"25"},{"size":1384,"mtime":1613847541450,"results":"45","hashOfConfig":"25"},{"size":1542,"mtime":1613924351890,"results":"46","hashOfConfig":"25"},{"size":1645,"mtime":1613925986378,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1n8kg8x",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},"C:\\Users\\Dusica\\application-post\\src\\index.js",[],["112","113"],"C:\\Users\\Dusica\\application-post\\src\\App.js",["114","115","116","117"],"import './App.css';\nimport Store from '../src/components/index';\nimport data from '../src/data/data';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from '../src/pages/NavBar';\nimport BlogPost from './components/blogPost/blogPost.js';\nimport SingleBlogPost from './components/singlePost/singleBlogPost';\nimport { BrowserRouter as Router, Switch, Route,Link} from \"react-router-dom\";\nimport BlogPostDetails from '../src/pages/blogPostDetails';\nimport MyProfil from './pages/myProfil';\nimport Login from './pages/login';\nimport axios from 'axios';\nimport Register from './pages/register';\nimport NewBlog from '../src/pages/newBlog';\nimport styles from '../src/appstyle.module.css'\n\nfunction App() {\n\n  axios.interceptors.request.use(function(config){\n    let token = localStorage.getItem(\"token\");\n    if(token){\n      config.headers ={\n      'Authorization': `Bearer ${token}`\n\n      }\n    }\n    return config;\n  }\n  , function(error) {\n    return Promise.reject(error);\n  })\n  return (\n    <Router>\n      <>\n        <div className=\"App\">     \n          <Nav/>\n          <div className = {styles.wrapperbox}>\n            <div className = \"container\">\n              <div className = \"row\">\n                  <Switch>\n                    <Route exact path=\"/\" component = {BlogPost} />\n                    <Route path = \"/single/:id\" component = {BlogPostDetails}/>\n                    <Route path = \"/my-profil\" component = {MyProfil}/>\n                    <Route path=\"/login\" component = {Login}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path = \"/new-blog\" component = {NewBlog}/>\n                  </Switch>         \n              </div>\n            </div>        \n          </div>\n        </div>\n        </>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","C:\\Users\\Dusica\\application-post\\src\\reportWebVitals.js",[],"C:\\Users\\Dusica\\application-post\\src\\components\\index.js",["118","119"],"import React, {useState} from 'react';\r\nimport data from '../data/data';\r\nimport BlogPost from './blogPost/blogPost';\r\n\r\n\r\nfunction Store() {\r\n    //const[blogs, setBlog] = useState(data);\r\n    //console.log(data);\r\n    return (\r\n        <>\r\n            <div>\r\n                <BlogPost/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Store;","C:\\Users\\Dusica\\application-post\\src\\data\\data.js",["120"],"export default  [\r\n    {\r\n      id:1,\r\n      name: \"What makes a good blog post?\",\r\n      description:\"To start, a good blog post is interesting and educational. Blogs should answer questions and help readers resolve a challenge they're experiencing — and you have to do so in an interesting way.It's not enough just to answer someone's questions — you also have to provide actionable steps while being engaging.\",\r\n      photo: \"../img/machine.png\",\r\n      content:\"When blogging, it pays dividends to lay out the structure of your piece before you begin writing. The structure is the skeleton of your text and preparing it has multiple benefits. Firstly, it’s easier to write a text when your structure is already there. Secondly, a clear structure helps the reader to easily read your post and grasp the core message. Here, we’ll give you practical tips to help you set up a clear blog post structure.\",\r\n      comment:[\r\n        {\r\n            title:\"121212\",\r\n            author:\"1212122\",\r\n            date:\"2122122\"\r\n        },\r\n        {\r\n            title:\"22232323\",\r\n            author:\"77777\",\r\n            date:\"77777\"\r\n        }\r\n        ]\r\n    },\r\n    {\r\n      id:2,\r\n      name: \"How to Write a Blog Post\",\r\n      description:\"Here are the steps you'll want to follow while writing a blog post.1. Understand your audience.Before you start writing your blog post,make sure you have a clear understanding of your target audience.Ask questions like: What do they want to know about? And, what will resonate with them?\",\r\n      photo: \"./img/software.png\",\r\n      content:\"Structuring a text well improves readability and, thereby, helps your readers to understand your text. If readers better understand the information you provide, it’s more likely they’ll find the answer to the question they have. When Google notices, by so-called user signals, you’re giving valuable answers to certain queries, chances are you’ll climb the rankings.\",\r\n      comment:[\r\n          {\r\n              title:\"eeeee\",\r\n              author:\"eeee\",\r\n              date:\"eeeeeeeee\"\r\n          }\r\n      ]\r\n    },\r\n    {\r\n      id:3,\r\n      name: \"Create your blog domain.\",\r\n      description:\"Next, you'll need a place to host this and every other blog post you write. This requires choosing a content management system (CMS) and a website domain hosting service.\",\r\n      photo: \"./img/strategy.png\",\r\n      content:\"Think before you start writing. Get a pen and paper and write down what you want to write about. That could include a bit of keyword research, but ideally, you’ve already done that. Check out our ultimate guide to keyword research for more on this. Next, set up a text structure and keep it close to hand while writing your blog post. One way of setting up a structure for your text is by following these three steps:\",\r\n      comment:[\r\n        {\r\n            title:\"rrrrrrr\",\r\n            author:\"rrrrr\",\r\n            date:\"rrrrrr\"\r\n        }\r\n        ]\r\n    },\r\n    {\r\n      id:4,\r\n      name: \"Register a domain or subdomain with a website host.\",\r\n      description:\"Your blog's domain will look like this: www.yourblog.com. The name between the two periods is up to you, as long as this domain name doesn't yet exist on the internet.\",\r\n      content:\"Setting up a coherent structure for your blog post is an essential step of SEO copywriting. It will result in a better understanding of the message of your blog posts. If people understand your message, they will be much more likely to share your post on social media or buy what you are selling. Taking time to think about a clear text structure before you start writing is worth your while. As you’re writing, think about the structure of your paragraphs, your use of transition words and the headings in your post. If you follow these ‘rules’ your blog post will be far more understandable and readable to your audience.Want to dive deeper into the subject of copywriting? Sign up for our SEO copywriting course for more writing tips!\",\r\n      comment:[\r\n        {\r\n            title:\"rerererer\",\r\n            author:\"rerererer\",\r\n            date:\"rerererer\"\r\n        }\r\n        ]\r\n    },\r\n    {\r\n      id:5,\r\n      name: \"Customize your blog's theme.\",\r\n      description:\"Once you have your domain name set up, customize the appearance of your blog to reflect the theme of the content you plan on creating and your brand.For example, if you're writing about sustainability and the environment, green might be a color to keep in mind while designing.\",\r\n      content:\"How to Write a Blog Post in Five Easy Steps [Summary]:Step 1: Plan your blog post by choosing a topic, creating an outline, conducting research, and checking facts.Step 2: Craft a headline that is both informative and will capture readers’ attentions. Step 3: Write your post, either writing a draft in a single session or gradually word on parts of it.Step 4: Use images to enhance your post, improve its flow, add humor, and explain complex topics.Step 5: Edit your blog post. Make sure to avoid repetition, read your post aloud to check its flow, have someone else read it and provide feedback, keep sentences and paragraphs short, don’t be a perfectionist, don’t be afraid to cut out text or adapt your writing lastminute.\",\r\n      comment:[\r\n        {\r\n            title:\"eeee\",\r\n            author:\"rrrrrrr\",\r\n            date:\"rrrrrrr\"\r\n        }\r\n        ]\r\n    },\r\n    {\r\n      id:6,\r\n      name: \"Identify your first blog post's topic.\",\r\n      description:\"Before you write anything, pick a topic for your blog post. The topic can be pretty general to start. For example, if you're a company that sells a CRM for small-to-enterprise businesses, your post might be about the importance of using a single software to keep Marketing, Sales, and Service aligned.\",\r\n      content:\"First, a disclaimer – the entire process of writing a blog post often takes more than a couple of hours, even if you can type eighty words per minute and your writing skills are sharp. From the seed of the idea to finally hitting “Publish,” you might spend several days or maybe even a week “writing” a blog post, but it’s important to spend those vital hours planning your post and even thinking about your post (yes, thinking counts as working if you’re a blogger) before you actually write it.\",\r\n      comment:[\r\n        {\r\n            title:\"000000\",\r\n            author:\"000000\",\r\n            date:\"000000\"\r\n        }\r\n        ]\r\n    },\r\n    {\r\n      id:7,\r\n      name: \"Come up with a working title.\",\r\n      description:\"You might come up with a few different working titles — in other words, iterations of approaching that topic to help you focus your writing.For example, you may decide to narrow your topic to. Tools for Fixing Leaky Faucets or Common Causes of Leaky Faucets.A working title is specific and will guide your post so you can start writing.\",\r\n      content:\"I can hear your objections already. “But Dan, I have to blog for a cardboard box manufacturing company.” I feel your pain, I really do. During the course of my career, I’ve written content for dozens of clients in some less-than-thrilling industries (such as financial regulatory compliance and corporate housing), but the hallmark of a professional blogger is the ability to write well about any topic, no matter how dry it may be. Blogging is a lot easier, however, if you can muster at least a little enthusiasm for the topic at hand.\",\r\n      comment:[\r\n        {\r\n            title:\"Prvi\",\r\n            author:\"Prvi\",\r\n            date:\"bla\"\r\n        },\r\n        {\r\n            title:\"Drugi\",\r\n            author:\"drugi\",\r\n            date:\"drugi\"\r\n        }\r\n        ]\r\n    },\r\n    {\r\n      id:8,\r\n      name: \"Write an intro (and make it captivating).\",\r\n      description:\"We've written more specifically about writing captivating introductions in the post, How to Write an Introduction, but let's review, shall we?First, grab the reader's attention. If you lose the reader in the first few paragraphs — or even sentences — of the introduction, they'll stop reading (even before they've given your post a fair shake). You can do this in a number of ways: tell a story or a joke, be empathetic, or grip the reader with an interesting fact or statistic.\",\r\n      content:\"You also need to be able to accept that not every post is going to get your motor running. Some posts will feel like a chore, but if you have editorial control over what you write about, then choose topics you’d want to read – even if they relate to niche industries. The more excited you can be about your topic, the more excited your readers will be when they’re reading it.\",\r\n      comment:[\r\n        {\r\n            title:\"eeeee\",\r\n            author:\"eeee\",\r\n            date:\"eeee\"\r\n        }\r\n        ]\r\n    },\r\n  ];\r\n  ","C:\\Users\\Dusica\\application-post\\src\\pages\\NavBar.js",["121","122"],"import React,{useState,useEffect} from 'react';\r\nimport logo from '../img/logoo.png';\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction Nav() {\r\n    const[token, setToken] = useState()\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\");\r\n        setToken(token);\r\n    },[])\r\n    const logOut = () => {\r\n        localStorage.removeItem(\"token\");\r\n        setToken(null);\r\n    }\r\n    return (\r\n        <>\r\n        <section className = \"nav-bar\">\r\n            <nav className = \"container\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col-3\">\r\n                            <Link to=\"/\"><img src={logo}></img> </Link>                  \r\n                        </div>\r\n                        <div className = \"col-9 main-navigation\">\r\n                            <ul className = \"nav-bar-item\">\r\n                                {token && <li><Link to=\"/my-profil\">My Profil</Link></li>}\r\n                                {!token && <li><Link to=\"/login\">Login</Link></li>}\r\n                                {token && <li><Link  onClick={logOut}>Log out</Link></li>}\r\n                                {!token && <li><Link to=\"/register\">Register</Link></li>}\r\n                                {token && <li><Link to=\"/new-blog\">Create Post</Link></li>}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\nexport default Nav;","C:\\Users\\Dusica\\application-post\\src\\pages\\blogPostDetails.js",["123","124","125","126"],"import React,{useEffect,useState} from 'react';\r\nimport data from '../data/data';\r\nimport CommentPost from '../components/commentPost';\r\nimport BlogPost from '../components/blogPost/blogPost';\r\nimport CommentForm from '../components/commentForm/commentForm';\r\nimport usePost from '../hooks/postHook';\r\nimport useComment from '../hooks/commentHook';\r\nimport UpdatePost from '../components/updatePost/updatePost';\r\n\r\nconst BlogPostDetails = (props) => {\r\n    const [blogInfo, setBlogInfo] = useState();\r\n    const[comments, setComments] = useState([]);\r\n    let passedId = props.match.params.id;\r\n    const {getPostById} = usePost();\r\n    const{getAllComment} = useComment();\r\n    useEffect(async () => {       \r\n        let blogData = await getPostById(passedId);\r\n            setBlogInfo(blogData);\r\n        let comment = await getAllComment(passedId);\r\n            setComments(comment);  \r\n    }, [passedId]);\r\n    const [inputText, setInputText] = useState({title: \"\", date: \"\", author: \"\"});\r\n\r\n    return (\r\n        <>\r\n            {blogInfo?.description}\r\n            {comments && comments.map(onecomment => {\r\n                return <CommentPost key={onecomment.id} comment = {onecomment}/>\r\n            })}\r\n            {\r\n                blogInfo && \r\n                <>\r\n                <CommentForm \r\n                    inputText={inputText} \r\n                    post={blogInfo} \r\n                    updatePost={setBlogInfo} \r\n                    setInputText= {setInputText}\r\n                />\r\n                <UpdatePost post = {blogInfo}/>\r\n                </>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogPostDetails;\r\n","C:\\Users\\Dusica\\application-post\\src\\components\\commentPost.js",["127","128","129"],"import React,{useEffect,useState} from 'react';\r\nimport UpdateComment from './updateComment';\r\nimport useComment from '../hooks/commentHook';\r\n\r\nconst CommentPost = ({comment}) => {\r\n    const[userModal, setUserModal] = useState(false);\r\n    const {deleteComment} = useComment();\r\n    const showModal = () => {\r\n        if(userModal == false) {\r\n            setUserModal(true);\r\n        }\r\n        else {\r\n            setUserModal(false)\r\n        }\r\n    }\r\n    const deleteCommentSubmit = async () => {\r\n        await deleteComment(comment.id);\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = \"container\">\r\n                <div className = \"row\">\r\n                    <div className = \"col-6\">\r\n                        <div className = \"item\">\r\n                            <h2 className = \"title-of-person\">{comment?.title}</h2>\r\n                        </div>\r\n                        <div className = \"title-comment\">\r\n                            <p>{comment?.description}</p>\r\n                            <p>{comment.user.name}</p>\r\n                            <p>{comment?.user.username}</p>\r\n                            {userModal == true && <UpdateComment  comment={comment} />}   \r\n                            <button onClick = {showModal}>Change comment</button>\r\n                            <button onClick = {deleteCommentSubmit}>Delete Comment</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentPost;\r\n","C:\\Users\\Dusica\\application-post\\src\\pages\\myProfil.js",["130","131","132"],"import React, {useState, useEffect} from 'react';\r\nimport UserProfil from '../components/userProfil/userProfil';\r\nimport user from '../data/user';\r\nimport useUser from '../hooks/userHook';\r\n\r\nconst MyProfil = () => {\r\n    const {getLogged} = useUser();\r\n    const [users, setUser] = useState();\r\n    useEffect( async () => {\r\n        let response = await getLogged();\r\n        setUser(response);\r\n    },[])\r\n    return (\r\n        <>\r\n            <UserProfil user={users} setUser = {setUser}/>          \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyProfil;","C:\\Users\\Dusica\\application-post\\src\\data\\user.js",["133"],"export default \r\n    {\r\n        id:1,\r\n        name: \"Dusica\",\r\n        surname:\"Jokic\",\r\n        about: \"I am Dusica Jokic and I create profil on your Blog Website. You post beatufil posts and I like your Post Portal.\"\r\n    }\r\n","C:\\Users\\Dusica\\application-post\\src\\hooks\\postHook.js",["134"],"import axios from 'axios';\r\n\r\nconst mainUrl = \"/api/posts\";\r\n\r\nexport default function usePost(){\r\n\r\n    const getAllPost = async () =>{\r\n        let postList = [];\r\n       let response = await axios.get(mainUrl);\r\n       return response.data;\r\n    }\r\n    \r\n    const getPostById = async (id) => {\r\n        let url =`${mainUrl}/${id}`; \r\n        let response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n\r\n    const saveNewPost = async(newBlogObject) => {\r\n        let response = await axios.post(mainUrl, newBlogObject);\r\n        return response.data;\r\n    }\r\n\r\n    const deletePost = async(id) => {\r\n        let url = `${mainUrl}/${id}`;\r\n        let response = await axios.delete(url);\r\n        return response.data;\r\n    }\r\n\r\n    const changePost = async(post) => {\r\n        let url = `${mainUrl}/${post.id}`;\r\n        let response =  await axios.put(url, post);\r\n        return response.data;\r\n    }\r\n\r\n    const uploadPostImage = async (data) => {\r\n        let url = `${mainUrl}/image`;\r\n        let response = await axios.post(url, data);\r\n        return response.data;\r\n    }\r\n\r\n    const searchPost = async (text) => {\r\n        let url = `${mainUrl}/search/${text}`;\r\n        let response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n\r\n    return {\r\n        getAllPost,\r\n        getPostById,\r\n        saveNewPost,\r\n        deletePost,\r\n        changePost,\r\n        uploadPostImage,\r\n        searchPost\r\n    }\r\n}","C:\\Users\\Dusica\\application-post\\src\\hooks\\commentHook.js",[],"C:\\Users\\Dusica\\application-post\\src\\pages\\login.js",[],"C:\\Users\\Dusica\\application-post\\src\\hooks\\userHook.js",[],"C:\\Users\\Dusica\\application-post\\src\\pages\\register.js",["135"],"import axios from 'axios';\r\nimport React,{useState} from 'react';\r\nimport useUser from '../hooks/userHook';\r\nimport {withRouter} from 'react-router-dom';\r\nimport registerStyle from './registerStyle.module.css';\r\n\r\n\r\nconst Register = (props) => {\r\n    const[registerUser, setRegisterUser] = useState({name:\"\", username:\"\", password:\"\"});\r\n    const{register} = useUser();\r\n    const inputTextHandler = (e) => {\r\n        setRegisterUser({...registerUser,[e.target.name]:e.target.value})\r\n    }\r\n    const registerConfirm = async() => {\r\n        let responseData = await register(registerUser);\r\n        if(responseData){\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className = {`${registerStyle.registerHolder} col-12`}>\r\n                <label>Your Name and Surname</label>\r\n                <input className = {registerStyle.inputStyle} type=\"text\" name=\"name\" onChange={inputTextHandler}/>\r\n                <label>Username</label>\r\n                <input className = {registerStyle.inputStyle}  type=\"text\" name=\"username\" onChange={inputTextHandler}/>\r\n                <label>Password</label>\r\n                <input className = {registerStyle.inputStyle}  type=\"password\" name=\"password\" onChange={inputTextHandler}/>\r\n                <button className = {registerStyle.registerBtn} onClick = {registerConfirm}>Register</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Register);","C:\\Users\\Dusica\\application-post\\src\\components\\updateComment.js",[],"C:\\Users\\Dusica\\application-post\\src\\components\\singlePost\\singleBlogPost.js",["136","137","138","139","140","141"],"import React,{useState,useEffect} from 'react';\r\nimport data from '../../data/data';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport usePost from '../../hooks/postHook'\r\nimport styles from '../singlePost/singleblogpost.module.css';\r\n\r\n\r\nconst SingleBlogPost = (props) => {\r\n    const [blog,setBlog] = useState(props.blog);\r\n    const {deletePost} = usePost();\r\n    const deletePostSubmit = async(id) => {\r\n        let data = await deletePost(id);\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <>     \r\n           \r\n                <div className = {`${styles.wrapperbox} col-3`}>\r\n                    <h3>{blog?.title}</h3>\r\n                    <p>{blog?.description}</p>\r\n                    <div className = {styles.wrapperImage}>\r\n                        <img src = {`data:image/gif;base64,${blog?.photo}`}/>\r\n                    </div>              \r\n                    <div className = {styles.viewMoreBtn}>\r\n                        <Link to = {`/single/${blog.id}`} >View More</Link>\r\n                    </div>\r\n                    <div> \r\n                        <button className = {styles.deleteBtn} onClick = {() => {deletePostSubmit(blog.id)}}>Delete</button>\r\n                    </div>\r\n                </div>  \r\n                    \r\n        </>\r\n    )\r\n}\r\n/*Ako idemo preko props.history.push*/\r\n//export default withRouter(SingleBlogPost);\r\nexport default SingleBlogPost;","C:\\Users\\Dusica\\application-post\\src\\components\\blogPost\\blogPost.js",["142","143","144"],"import React, {useState,useEffect} from 'react';\r\nimport SingleBlogPost from '../singlePost/singleBlogPost';\r\nimport data from '../../data/data';\r\nimport usePost from '../../hooks/postHook';\r\nimport blogPostStyle from '../blogPost/blogPost.module.css';\r\n\r\nconst BlogPost = () => {\r\n    const[blogs, setBlogs] =  useState([]);\r\n    const[text, setText] = useState();\r\n    const {getAllPost, searchPost} = usePost();\r\n   \r\n    useEffect( async () => {\r\n        let posts = await getAllPost();\r\n        setBlogs(posts);\r\n    }, [])\r\n\r\n    const inputHandler = (e) => {\r\n        let textSearch = e.target.value;\r\n        setText(textSearch);\r\n    }\r\n\r\n    const searchPostSubmit = async () => {\r\n        let searchPostData = await searchPost(text);\r\n        setBlogs(searchPostData);\r\n        setText(\"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = {`${blogPostStyle.searchPost} col-12`}>\r\n                <label>Search Posts</label>\r\n                <input className = {blogPostStyle.inputStyle} type=\"text\" name=\"search\" onChange = {inputHandler} />\r\n                <button className = {blogPostStyle.searchBtn} onClick = {searchPostSubmit}>Search</button>\r\n            </div>\r\n            {blogs.map( bl => {\r\n               return  <SingleBlogPost key={bl.id} blog={bl} />\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogPost;","C:\\Users\\Dusica\\application-post\\src\\components\\updatePost\\updatePost.js",["145"],"import React, {useEffect, useState} from 'react';\r\nimport usePost from '../../hooks/postHook';\r\nimport updatePostStyle from '../updatePost/updatePost.module.css';\r\n\r\nconst UpdatePost = ({post}) => {\r\n    const[postCopy, setPostCopy] = useState(post);\r\n    const{changePost, uploadPostImage} = usePost();\r\n    const inputChangeHandler = (e) => {\r\n        setPostCopy({...postCopy,[e.target.name]:e.target.value});\r\n    }\r\n    const updatePostSubmit = async () => {\r\n        console.log(postCopy);\r\n        await changePost(postCopy);\r\n        window.location.reload();\r\n    }\r\n\r\n    const fileInputHandler = async (e) => {\r\n        var file = e.target.files[0];\r\n        var data = new FormData();\r\n        data.append(\"id\",post.id);\r\n        data.append(\"file\", file);\r\n        await uploadPostImage(data);\r\n    }\r\n    return (\r\n        <>\r\n        <div className = {`${updatePostStyle.wrapper} col-12`}>\r\n            <label>Change Post Description</label>\r\n            <input className = {updatePostStyle.wrapperInput} type=\"text\" name=\"description\" value={postCopy?.description} onChange = {inputChangeHandler}/>\r\n            <button className = {updatePostStyle.btn} onClick = {updatePostSubmit}>Update Description of Post</button>\r\n        </div>\r\n        <div className = {`${updatePostStyle.wrapper} ${updatePostStyle.inputPhoto} col-12`}>\r\n            <label>Upload Image For Your Post</label>\r\n            <input className = {updatePostStyle.btn} type=\"file\" onChange = {fileInputHandler}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdatePost;","C:\\Users\\Dusica\\application-post\\src\\components\\commentForm\\commentForm.js",["146","147","148","149","150","151"],"import React, {useState} from 'react';\r\nimport BlogPostDetails from '../../pages/blogPostDetails';\r\nimport commentFormStyle from '../commentForm/commentForm.module.css';\r\n\r\nconst CommentForm = ({setInputText, post, updatePost, inputText}) => {\r\n    const inputTextHandler = (e) => {\r\n        console.log(e);\r\n        setInputText({...inputText,[e.target.name]:e.target.value})\r\n    };\r\n    const submitHandlerComment = (e) => {\r\n        if(validateInput() == true) {\r\n            post.comment.push(inputText);\r\n            updatePost(\r\n             post\r\n             );\r\n            setInputText({author:\"\",date:\"\",title:\"\"});\r\n        }\r\n        else {\r\n            return ;\r\n        }\r\n    }\r\n    const[errorValidationResult, setErrorValidationResult] = useState({showErrorMessage: false, errorMessage: \"\"});\r\n    const validateInput = () => {\r\n        if(inputText.author == \"\" || !inputText.author || inputText.date == \"\" || !inputText.date || inputText.title == \"\" || !inputText.title){\r\n            setErrorValidationResult({showErrorMessage: true, errorMessage:\"Molimo popunite sva polja!\"})\r\n            return false;\r\n        }\r\n        else {\r\n            setErrorValidationResult({showErrorMessage: false, errorMessage:\"\"});\r\n            return true;\r\n        }\r\n    }\r\n    return (\r\n        <>       \r\n        <div className = \"container\">\r\n            <div className = \"row\">\r\n                <div className = \"col-12\">\r\n                    <form className = {commentFormStyle.formStyle}>\r\n                        {errorValidationResult.showErrorMessage == true && <p>{errorValidationResult.errorMessage}</p>}\r\n                        <label>Unesite svoje ime i prezime:</label>\r\n                        <input className = {commentFormStyle.inputStyle} value={inputText.date} name=\"date\" onChange = {inputTextHandler} type=\"text\"/>\r\n                        <input className = {commentFormStyle.inputStyle} value={inputText.title} name=\"title\" onChange = {inputTextHandler} type=\"text\"/>\r\n                        <input className = {commentFormStyle.inputStyle} value={inputText.author} name=\"author\" onChange = {inputTextHandler} type=\"text\"/>\r\n                        <div className = {commentFormStyle.publishBtn} onClick = {submitHandlerComment}>Publish</div>\r\n                    </form>\r\n                </div>            \r\n            </div>\r\n        </div>       \r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\Dusica\\application-post\\src\\components\\userProfil\\userProfil.js",["152","153","154","155"],"import React, {useState} from 'react';\r\nimport user from '../../data/user';\r\nimport UserModal from '../userModal/userModal';\r\nimport userProfilStyle from '../userProfil/userProfil.module.css';\r\n\r\nconst UserProfil = ({user, setUser}) => {\r\n    const[userModal, setUserModal] = useState(false);\r\n    const showModal = () => {\r\n        if(userModal == false) {\r\n            setUserModal(true);\r\n        }\r\n        else {\r\n            setUserModal(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className = {`${userProfilStyle.userProfilStyle} col-12`}>\r\n                <div className = \"row\">\r\n                    <div className = {`${userProfilStyle.profilStyle}`}>\r\n                        <span>{user?.name}</span>                   \r\n                        <span>{user?.username}</span>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <div className = {`${userProfilStyle.wrapperImage} col-12`}>\r\n                        <img src = {`data:image/gif;base64,${user?.photo}`}/>\r\n                    </div>\r\n                </div>\r\n                {userModal == true && <UserModal user={user}/>}              \r\n                <button className = {userProfilStyle.btnChange} onClick = {showModal}>Change Profile</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UserProfil;","C:\\Users\\Dusica\\application-post\\src\\components\\userModal\\userModal.js",[],["156","157"],"C:\\Users\\Dusica\\application-post\\src\\pages\\newBlog.js",["158","159","160"],"import React, {useState, useEffect} from 'react';\r\nimport usePost from '../hooks/postHook';\r\nimport {withRouter} from 'react-router-dom';\r\nimport useUser from '../hooks/userHook';\r\nimport newBlogStyle from '../pages/newBlog.module.css';\r\n\r\nconst NewBlog = (props) => {\r\n    const[newBlog, setNewBlog] = useState({title:\"\",description:\"\",date: new Date(), likes:0, dislike:0,user:null})\r\n    const{saveNewPost} = usePost();\r\n    const{getLogged} = useUser();\r\n    \r\n    useEffect(async() => {\r\n        let loggedUser = await getLogged();\r\n        setNewBlog({...newBlog,user:loggedUser});\r\n    },[])\r\n    const inputTextHandler = (e) => {\r\n        setNewBlog({...newBlog,[e.target.name]:e.target.value})\r\n    }\r\n    const createNewPost = async() => {\r\n        let newBlogData = await saveNewPost(newBlog);\r\n        props.history.push('/');\r\n    }\r\n    return (\r\n        <>\r\n        <div className = {`${newBlogStyle.newBlogWrapper} col-12`}>\r\n            <div>\r\n                <label className = {newBlogStyle.labelStyle} >Write your Title</label>\r\n                <input className = {newBlogStyle.inputStyle} type=\"text\" name=\"title\" onChange = {inputTextHandler}/>\r\n            </div>\r\n            <div>\r\n                <label className = {newBlogStyle.labelStyle} >Write Your Description of Post</label>\r\n                <input className = {newBlogStyle.inputStyle} type=\"text\" name=\"description\" onChange = {inputTextHandler}/>\r\n            </div>\r\n            <button className = {newBlogStyle.addNewBtn} onClick = {createNewPost}>Add New Post</button>\r\n        </div>       \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(NewBlog);",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":13},{"ruleId":"165","severity":1,"message":"169","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":12},{"ruleId":"165","severity":1,"message":"170","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":22},{"ruleId":"165","severity":1,"message":"171","line":8,"column":49,"nodeType":"167","messageId":"168","endLine":8,"endColumn":53},{"ruleId":"165","severity":1,"message":"172","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":24},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":119,"endColumn":5},{"ruleId":"165","severity":1,"message":"176","line":3,"column":15,"nodeType":"167","messageId":"168","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":22,"column":42,"nodeType":"179","endLine":22,"endColumn":58},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":12},{"ruleId":"165","severity":1,"message":"180","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":16,"column":15,"nodeType":"183","endLine":21,"endColumn":6},{"ruleId":"181","severity":1,"message":"184","line":21,"column":8,"nodeType":"185","endLine":21,"endColumn":18,"suggestions":"186"},{"ruleId":"165","severity":1,"message":"187","line":1,"column":15,"nodeType":"167","messageId":"168","endLine":1,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":9,"column":22,"nodeType":"190","messageId":"191","endLine":9,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":33,"column":40,"nodeType":"190","messageId":"191","endLine":33,"endColumn":42},{"ruleId":"165","severity":1,"message":"192","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"182","line":9,"column":16,"nodeType":"183","endLine":12,"endColumn":6},{"ruleId":"181","severity":1,"message":"193","line":12,"column":7,"nodeType":"185","endLine":12,"endColumn":9,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"195","line":1,"column":1,"nodeType":"175","endLine":7,"endColumn":6},{"ruleId":"165","severity":1,"message":"196","line":8,"column":13,"nodeType":"167","messageId":"168","endLine":8,"endColumn":21},{"ruleId":"165","severity":1,"message":"197","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"187","line":1,"column":24,"nodeType":"167","messageId":"168","endLine":1,"endColumn":33},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":12},{"ruleId":"165","severity":1,"message":"176","line":3,"column":15,"nodeType":"167","messageId":"168","endLine":3,"endColumn":25},{"ruleId":"165","severity":1,"message":"198","line":9,"column":17,"nodeType":"167","messageId":"168","endLine":9,"endColumn":24},{"ruleId":"165","severity":1,"message":"199","line":12,"column":13,"nodeType":"167","messageId":"168","endLine":12,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":22,"column":25,"nodeType":"179","endLine":22,"endColumn":78},{"ruleId":"165","severity":1,"message":"169","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"182","line":12,"column":16,"nodeType":"183","endLine":15,"endColumn":6},{"ruleId":"181","severity":1,"message":"200","line":15,"column":8,"nodeType":"185","endLine":15,"endColumn":10,"suggestions":"201"},{"ruleId":"165","severity":1,"message":"187","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"202","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":11,"column":28,"nodeType":"190","messageId":"191","endLine":11,"endColumn":30},{"ruleId":"188","severity":1,"message":"189","line":24,"column":29,"nodeType":"190","messageId":"191","endLine":24,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":24,"column":74,"nodeType":"190","messageId":"191","endLine":24,"endColumn":76},{"ruleId":"188","severity":1,"message":"189","line":24,"column":118,"nodeType":"190","messageId":"191","endLine":24,"endColumn":120},{"ruleId":"188","severity":1,"message":"189","line":39,"column":65,"nodeType":"190","messageId":"191","endLine":39,"endColumn":67},{"ruleId":"165","severity":1,"message":"192","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":12},{"ruleId":"188","severity":1,"message":"189","line":9,"column":22,"nodeType":"190","messageId":"191","endLine":9,"endColumn":24},{"ruleId":"177","severity":1,"message":"178","line":27,"column":25,"nodeType":"179","endLine":27,"endColumn":78},{"ruleId":"188","severity":1,"message":"189","line":30,"column":28,"nodeType":"190","messageId":"191","endLine":30,"endColumn":30},{"ruleId":"161","replacedBy":"203"},{"ruleId":"163","replacedBy":"204"},{"ruleId":"181","severity":1,"message":"182","line":12,"column":15,"nodeType":"183","endLine":15,"endColumn":6},{"ruleId":"181","severity":1,"message":"205","line":15,"column":7,"nodeType":"185","endLine":15,"endColumn":9,"suggestions":"206"},{"ruleId":"165","severity":1,"message":"207","line":20,"column":13,"nodeType":"167","messageId":"168","endLine":20,"endColumn":24},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Store' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","'SingleBlogPost' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BlogPost' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getAllComment' and 'getPostById'. Either include them or remove the dependency array.","ArrayExpression",["210"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is defined but never used.","React Hook useEffect has a missing dependency: 'getLogged'. Either include it or remove the dependency array.",["211"],"Assign object to a variable before exporting as module default","'postList' is assigned a value but never used.","'axios' is defined but never used.","'setBlog' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllPost'. Either include it or remove the dependency array.",["212"],"'BlogPostDetails' is defined but never used.",["208"],["209"],"React Hook useEffect has missing dependencies: 'getLogged' and 'newBlog'. Either include them or remove the dependency array. You can also do a functional update 'setNewBlog(n => ...)' if you only need 'newBlog' in the 'setNewBlog' call.",["213"],"'newBlogData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [getAllComment, getPostById, passedId]",{"range":"222","text":"223"},"Update the dependencies array to be: [getLogged]",{"range":"224","text":"225"},"Update the dependencies array to be: [getAllPost]",{"range":"226","text":"227"},"Update the dependencies array to be: [getLogged, newBlog]",{"range":"228","text":"229"},[898,908],"[getAllComment, getPostById, passedId]",[403,405],"[getLogged]",[525,527],"[getAllPost]",[595,597],"[getLogged, newBlog]"]